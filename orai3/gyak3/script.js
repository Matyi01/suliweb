let pic = [
    ["#ff0000", "#ff0000", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ff0000", "#ffff00", "#ff0000", "#ff0000", "#ff0000", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ff0000", "#ffff00", "#ff0000"],
    ["#ff0000", "#ff0000", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ffff00", "#ff0000", "#ff0000", "#ff0000", "#ff0000", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ff0000", "#ffff00", "#ff0000"],
    ["#ff0000", "#00ff00", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ff0000", "#ffff00", "#ff0000", "#ff0000", "#ff0000", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ff0000", "#ffff00", "#ff0000"],
    ["#ff0000", "#ff0000", "#00ff00", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ffff00", "#ff0000", "#ff0000", "#ff0000", "#ff0000", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ff0000", "#ffff00", "#ff0000"],
    ["#ff0000", "#00ff00", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ff0000", "#ffff00", "#ff0000", "#ff0000", "#ff0000", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ff0000", "#ffff00", "#ff0000"],
    ["#ff0000", "#ff0000", "#00ff00", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ffff00", "#ff0000", "#ff0000", "#ff0000", "#ff0000", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ff0000", "#ffff00", "#ff0000"],
    ["#ff0000", "#00ff00", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ff0000", "#ffff00", "#ff0000", "#ff0000", "#ff0000", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ff0000", "#ffff00", "#ff0000"],
    ["#ff0000", "#ff0000", "#00ff00", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ffff00", "#ff0000", "#ff0000", "#ff0000", "#ff0000", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ff0000", "#ffff00", "#ff0000"],
    ["#ff0000", "#00ff00", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ff0000", "#ffff00", "#ff0000", "#ff0000", "#ff0000", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ff0000", "#ffff00", "#ff0000"],
    ["#444", "#e00", "#00ff00", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ffff00", "#ff0000", "#ff0000", "#ff0000", "#ff0000", "#ff0000", "#0000ff", "#ff0000", "#0000ff", "#ff0000", "#ff0000", "#ffff00", "#ff0000"]];

let betuk = {
    a: [["#444", "#444", "#444", "#444", "#444", "#444", "#444"],
    ["#444", "#444", "#e00", "#e00", "#e00", "#444", "#444"],
    ["#444", "#e00", "#444", "#444", "#444", "#e00", "#444"],
    ["#444", "#e00", "#e00", "#e00", "#e00", "#e00", "#444"],
    ["#444", "#e00", "#444", "#444", "#444", "#e00", "#444"],
    ["#444", "#e00", "#444", "#444", "#444", "#e00", "#444"],
    ["#444", "#e00", "#444", "#444", "#444", "#e00", "#444"],
    ["#444", "#444", "#444", "#444", "#444", "#444", "#444"]],
    b: [["#444", "#444", "#444", "#444", "#444", "#444", "#444"],
    ["#444", "#e00", "#e00", "#e00", "#e00", "#444", "#444"],
    ["#444", "#e00", "#444", "#444", "#444", "#e00", "#444"],
    ["#444", "#e00", "#e00", "#e00", "#e00", "#444", "#444"],
    ["#444", "#e00", "#444", "#444", "#444", "#e00", "#444"],
    ["#444", "#e00", "#444", "#444", "#444", "#e00", "#444"],
    ["#444", "#e00", "#e00", "#e00", "#e00", "#444", "#444"],
    ["#444", "#444", "#444", "#444", "#444", "#444", "#444"]],
    c: [["#444", "#444", "#444", "#444", "#444", "#444", "#444"],
    ["#444", "#444", "#e00", "#e00", "#e00", "#444", "#444"],
    ["#444", "#e00", "#444", "#444", "#444", "#e00", "#444"],
    ["#444", "#e00", "#444", "#444", "#444", "#444", "#444"],
    ["#444", "#e00", "#444", "#444", "#444", "#444", "#444"],
    ["#444", "#e00", "#444", "#444", "#444", "#e00", "#444"],
    ["#444", "#444", "#e00", "#e00", "#e00", "#444", "#444"],
    ["#444", "#444", "#444", "#444", "#444", "#444", "#444"]],
    d: [["#444", "#444", "#444", "#444", "#444", "#444", "#444"],
    ["#444", "#e00", "#e00", "#e00", "#e00", "#444", "#444"],
    ["#444", "#e00", "#444", "#444", "#444", "#e00", "#444"],
    ["#444", "#e00", "#444", "#444", "#444", "#e00", "#444"],
    ["#444", "#e00", "#444", "#444", "#444", "#e00", "#444"],
    ["#444", "#e00", "#444", "#444", "#444", "#e00", "#444"],
    ["#444", "#e00", "#e00", "#e00", "#e00", "#444", "#444"],
    ["#444", "#444", "#444", "#444", "#444", "#444", "#444"]],
    ' ': [["#444", "#444", "#444", "#444", "#444", "#444", "#444"],
    ["#444", "#444", "#444", "#444", "#444", "#444", "#444"],
    ["#444", "#444", "#444", "#444", "#444", "#444", "#444"],
    ["#444", "#444", "#444", "#444", "#444", "#444", "#444"],
    ["#444", "#444", "#444", "#444", "#444", "#444", "#444"],
    ["#444", "#444", "#444", "#444", "#444", "#444", "#444"],
    ["#444", "#444", "#444", "#444", "#444", "#444", "#444"],
    ["#444", "#444", "#444", "#444", "#444", "#444", "#444"]]
}


function init() {
    let pixelh = 10;
    let pixelw = 10;
    let h = 8;
    let w = 14;
    for (let i = 0; i < h; i++) {
        let row = document.createElement("div");
        row.style.lineHeight = 0;
        for (let j = 0; j < w; j++) {
            let color = betuk["a"][i % 8][j % 7]
            let p = pixel(pixelh, pixelw, color);
            p.setAttribute("id", i + " " + j);

            row.appendChild(p);
        }
        document.getElementById("matrix").appendChild(row);
    }
}

function pixel(h, w, c) {
    let pixel = document.createElement("span");
    pixel.style.width = w + "px";
    pixel.style.height = h + "px";
    pixel.style.backgroundColor = c;
    pixel.style.display = "inline-block";
    return pixel;
}

function ok() {
    document.getElementById("matrix").innerHTML = "";
    let textinput = document.getElementById("textinput").value;
    let pixelh = 10;
    let pixelw = 10;
    let h = 8;
    //let w = textinput.length * 7;
    let w = 42;
    for (let i = 0; i < h; i++) {
        let row = document.createElement("div");
        row.style.lineHeight = 0;
        for (let j = 0; j < w; j++) {
            let color = "#444"
            
            if (textinput.includes(textinput[Math.floor(j / 7)])) {
                color = betuk[textinput[Math.floor(j / 7)]][i % 8][j % 7]
            }

            let p = pixel(pixelh, pixelw, color);
            p.setAttribute("id", i + " " + j);

            row.appendChild(p);
        }
        document.getElementById("matrix").appendChild(row);
    }
}



function mozgat(kezd) {
    document.getElementById("matrix").innerHTML = "";
    let textinput = document.getElementById("textinput").value;
    let pixelh = 10;
    let pixelw = 10;
    let h = 8;
    let w = 42;

    for (let i = 0; i < h; i++) {
        let row = document.createElement("div");
        row.style.lineHeight = 0;
        for (let j = 0; j < w; j++) {
            let color = "#444"
            
            if (textinput.includes(textinput[Math.floor(j / 7)])) {
                color = betuk[textinput[Math.floor(j / 7)]][i % 8][j % 7]
            }

            let p = pixel(pixelh, pixelw, color);
            p.setAttribute("id", i + " " + j);

            row.appendChild(p);

        }

        document.getElementById("matrix").appendChild(row);
    }




}
